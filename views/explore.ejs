<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Explore - MyApp</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #fafafa;
      color: #262626;
    }

    header {
      background: white;
      border-bottom: 1px solid #dbdbdb;
      padding: 12px 20px;
      font-weight: 600;
      font-size: 20px;
      position: sticky;
      top: 0;
      z-index: 1000;
    }

    .explore-grid {
      max-width: 935px;
      margin: 20px auto;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      grid-gap: 28px;
      padding: 0 10px;
    }

    .post-card {
      position: relative;
      cursor: pointer;
      overflow: hidden;
      border-radius: 8px;
      background: white;
      box-shadow: 0 1px 3px rgb(0 0 0 / 0.1);
      transition: transform 0.3s ease;
    }
    .post-card:hover {
      transform: scale(1.03);
      box-shadow: 0 4px 12px rgb(0 0 0 / 0.15);
    }

    .post-image {
      width: 100%;
      display: block;
      aspect-ratio: 1 / 1;
      object-fit: cover;
      transition: opacity 0.3s ease;
    }

    /* Overlay for likes/comments */
    .overlay {
      position: absolute;
      top: 0; bottom: 0; left: 0; right: 0;
      background: rgba(0, 0, 0, 0.35);
      color: white;
      opacity: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 18px;
      gap: 20px;
      transition: opacity 0.3s ease;
    }
    .post-card:hover .overlay {
      opacity: 1;
    }
    .overlay span {
      display: flex;
      align-items: center;
      gap: 6px;
      font-weight: 600;
    }
    .icon-heart, .icon-comment {
      width: 20px;
      height: 20px;
      fill: white;
    }

    /* Profile image circle overlay */
    .profile-pic {
      position: absolute;
      top: 8px;
      left: 8px;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      border: 2px solid white;
      object-fit: cover;
      box-shadow: 0 0 5px rgba(0,0,0,0.3);
      background: #ddd;
    }

    /* Location overlay bottom-left */
    .location-tag {
      position: absolute;
      bottom: 8px;
      left: 8px;
      background: rgba(0, 0, 0, 0.6);
      color: white;
      font-size: 14px;
      padding: 3px 8px;
      border-radius: 12px;
      max-width: 80%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      pointer-events: none;
    }

    /* Loading spinner */
    #loading {
      text-align: center;
      padding: 20px;
      font-weight: 600;
      color: #888;
      display: none;
    }

    /*  */
/* Unified media style for both image and video */
.post-media {
  width: 100%;
  display: block;
  aspect-ratio: 1 / 1;
  object-fit: cover;
  transition: opacity 0.3s ease;
  background: #000;
}

/* Ensure smooth video hover play */
.post-card video.post-media {
  pointer-events: none;
}

/* Add author name display if you want */
.author-name {
  position: absolute;
  top: 8px;
  left: 48px;
  font-size: 14px;
  color: white;
  text-shadow: 0 0 5px rgba(0,0,0,0.6);
  font-weight: 500;
}

    /*  */
  </style>
  <link rel="stylesheet" href="/partials/navbar.css">

</head>
<body>

<header>
  Explore
</header>

<!-- Add both Video & Image Feature -->
<%
// Helper function to check for video file extensions
const isVideo = (filename) => {
  return /\.(mp4|webm|ogg)$/i.test(filename);
};
%>
<div id="explore-grid" class="explore-grid"> 
  <% posts.forEach(post => { %>
    <!-- <div class="post-card" /goto -->
      <div class="post-card" onclick="window.location.href='/posts/<%= post._id %>'">

      <% if (isVideo(post.imageSource)) { %>
        <video class="post-media" src="/uploads/<%= post.imageSource %>" autoplay muted loop playsinline></video>
      <% } else { %>
        <img class="post-media" src="/uploads/<%= post.imageSource %>" alt="Post image" />
      <% } %>

      <% if (post.author) { %>
        <img class="profile-pic" src="/uploads/<%= post.author.profile_image || 'default.jpg' %>" alt="Author profile" />
        <div class="author-name"><%= post.author.name || post.author.username %></div>
      <% } %>

      <% if (post.location) { %>
        <div class="location-tag"><%= post.location %></div>
      <% } %>

      <div class="overlay">
        <span>
          <svg class="icon-heart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 
              19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg>
          <%= post.no_likes %>
        </span>
        <span>
          <svg class="icon-comment" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>
          </svg>
          <%= post.comments %>
        </span>
      </div>
    </div>
  <% }) %>
</div>


<!--  -->
<div id="loading">Loading more posts...</div>

<script>
  let currentPage = 1;
  let loading = false;
  const exploreGrid = document.getElementById('explore-grid');
  const loadingIndicator = document.getElementById('loading');

  async function loadMorePosts() {
    if (loading) return;
    loading = true;
    currentPage++;
    loadingIndicator.style.display = 'block';

    try {
      const response = await fetch(`/api/posts?page=${currentPage}`);
      if (!response.ok) throw new Error('Network response was not ok');
      const newPosts = await response.json();

      if (newPosts.length === 0) {
        // No more posts
        window.removeEventListener('scroll', onScroll);
        loadingIndicator.textContent = 'No more posts';
        return;
      }

      // Append posts
      newPosts.forEach(post => {
        const postCard = document.createElement('div');
        postCard.className = 'post-card';
        postCard.onclick = () => {
          window.location.href = `/post/${post._id}`;
        };

        // Post image
        const img = document.createElement('img');
        img.className = 'post-image';
        img.src = post.imageSource;
        img.alt = 'Post image';
        postCard.appendChild(img);

        // Profile pic
        if (post.author && post.author.profile_image) {
          const profileImg = document.createElement('img');
          profileImg.className = 'profile-pic';
          profileImg.src = post.author.profile_image;
          profileImg.alt = 'Author profile';
          postCard.appendChild(profileImg);
        }

        // Location
        if (post.location) {
          const locDiv = document.createElement('div');
          locDiv.className = 'location-tag';
          locDiv.textContent = post.location;
          postCard.appendChild(locDiv);
        }

        // Overlay div
        const overlay = document.createElement('div');
        overlay.className = 'overlay';

        // Likes span
        const likesSpan = document.createElement('span');
        likesSpan.innerHTML = `
          <svg class="icon-heart" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3
            c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3
            19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
          </svg> ${post.no_likes}
        `;
        overlay.appendChild(likesSpan);

        // Comments span
        const commentsSpan = document.createElement('span');
        commentsSpan.innerHTML = `
          <svg class="icon-comment" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14
            c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>
          </svg> ${post.comments}
        `;
        overlay.appendChild(commentsSpan);

        postCard.appendChild(overlay);

        exploreGrid.appendChild(postCard);
      });
    } catch (error) {
      console.error('Error loading more posts:', error);
    } finally {
      loading = false;
      loadingIndicator.style.display = 'none';
    }
  }

  function onScroll() {
    if (
      window.innerHeight + window.scrollY >=
      document.body.offsetHeight - 500
    ) {
      loadMorePosts();
    }
  }

  window.addEventListener('scroll', onScroll);

  // 
      // Play/pause video on hover
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.post-card video').forEach(video => {
      video.addEventListener('mouseenter', () => video.play());
      video.addEventListener('mouseleave', () => video.pause());
    });
  });

// 
  // Play/pause video on hover
  // document.addEventListener('DOMContentLoaded', () => {
  //   document.querySelectorAll('.post-card video').forEach(video => {
  //     video.pause(); // Ensure paused by default
  //     video.addEventListener('mouseenter', () => video.play());
  //     video.addEventListener('mouseleave', () => {
  //       video.pause();
  //       video.currentTime = 0; // Optional: rewind
  //     });
  //   });
  // });

// Redirection to Particular Post on Social Media

  //   document.addEventListener('DOMContentLoaded', () => {
  //   const hash = window.location.hash;
  //   if (hash && document.querySelector(hash)) {
  //     const el = document.querySelector(hash);
  //     el.scrollIntoView({ behavior: 'smooth', block: 'center' });
  //   }
  // });
//END => Redirection to Particular Post on Social Media

</script>

</body>
</html>
